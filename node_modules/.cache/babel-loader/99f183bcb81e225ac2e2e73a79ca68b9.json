{"ast":null,"code":"import { ADD_DETAIL, GET_DETAIL, UPDATE_DETAIL, DELETE_DETAIL } from \"../constant/types\";\nconst initialState = {\n  contacts: [{\n    \"userId\": 1,\n    \"id\": 1,\n    \"title\": \"delectus aut autem\",\n    \"completed\": false\n  }, {\n    \"userId\": 1,\n    \"id\": 2,\n    \"title\": \"quis ut nam facilis et officia qui\",\n    \"completed\": false\n  }, {\n    \"userId\": 1,\n    \"id\": 3,\n    \"title\": \"fugiat veniam minus\",\n    \"completed\": false\n  }, {\n    \"userId\": 1,\n    \"id\": 4,\n    \"title\": \"et porro tempora\",\n    \"completed\": true\n  }, {\n    \"userId\": 1,\n    \"id\": 5,\n    \"title\": \"laboriosam mollitia et enim quasi adipisci quia provident illum\",\n    \"completed\": false\n  }],\n  contact: null\n};\nexport const detailReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_DETAIL:\n      return {\n        contacts: [action.payload, ...state.contacts]\n      };\n\n    case GET_DETAIL:\n      let arr = state.contacts.filter(contact => contact.id == action.payload);\n      arr = arr.values();\n\n      for (let val of arr) {\n        arr = val;\n      }\n\n      return { ...state,\n        contact: arr\n      };\n\n    case UPDATE_DETAIL:\n      return { ...state,\n        contact: state.contacts.map(contact => contact.id == action.payload.id ? action.payload : contact)\n      };\n\n    case DELETE_DETAIL:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id != action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["E:/nimap/src/reducer/detailReducer.js"],"names":["ADD_DETAIL","GET_DETAIL","UPDATE_DETAIL","DELETE_DETAIL","initialState","contacts","contact","detailReducer","state","action","type","payload","arr","filter","id","values","val","map"],"mappings":"AAAA,SACEA,UADF,EAEEC,UAFF,EAGEC,aAHF,EAIEC,aAJF,QAKO,mBALP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAC,CACP;AACA,cAAU,CADV;AAEA,UAAM,CAFN;AAGA,aAAS,oBAHT;AAIA,iBAAa;AAJb,GADO,EAOT;AACE,cAAU,CADZ;AAEE,UAAM,CAFR;AAGE,aAAS,oCAHX;AAIE,iBAAa;AAJf,GAPS,EAaT;AACE,cAAU,CADZ;AAEE,UAAM,CAFR;AAGE,aAAS,qBAHX;AAIE,iBAAa;AAJf,GAbS,EAmBT;AACE,cAAU,CADZ;AAEE,UAAM,CAFR;AAGE,aAAS,kBAHX;AAIE,iBAAa;AAJf,GAnBS,EAyBT;AACE,cAAU,CADZ;AAEE,UAAM,CAFR;AAGE,aAAS,iEAHX;AAIE,iBAAa;AAJf,GAzBS,CADU;AAiCnBC,EAAAA,OAAO,EAAE;AAjCU,CAArB;AAoCA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAiC;AAC1D,UAAOA,MAAM,CAACC,IAAd;AACA,SAAKV,UAAL;AACI,aAAM;AACFK,QAAAA,QAAQ,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,QAA1B;AADR,OAAN;;AAIJ,SAAKJ,UAAL;AACE,UAAIW,GAAG,GAAGJ,KAAK,CAACH,QAAN,CAAeQ,MAAf,CAAuBP,OAAD,IAAaA,OAAO,CAACQ,EAAR,IAAcL,MAAM,CAACE,OAAxD,CAAV;AACEC,MAAAA,GAAG,GAAGA,GAAG,CAACG,MAAJ,EAAN;;AACA,WAAI,IAAIC,GAAR,IAAeJ,GAAf,EAAmB;AACjBA,QAAAA,GAAG,GAAGI,GAAN;AACD;;AACD,aAAM,EACF,GAAGR,KADD;AAEFF,QAAAA,OAAO,EAAEM;AAFP,OAAN;;AAKJ,SAAKV,aAAL;AACE,aAAM,EACJ,GAAGM,KADC;AAEJF,QAAAA,OAAO,EAACE,KAAK,CAACH,QAAN,CAAeY,GAAf,CAAoBX,OAAD,IACvBA,OAAO,CAACQ,EAAR,IAAcL,MAAM,CAACE,OAAP,CAAeG,EAA7B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDL,OAD/C;AAFJ,OAAN;;AAOF,SAAKH,aAAL;AACE,aAAM,EACF,GAAGK,KADD;AAEFH,QAAAA,QAAQ,EAACG,KAAK,CAACH,QAAN,CAAeQ,MAAf,CAAuBP,OAAD,IAC3BA,OAAO,CAACQ,EAAR,IAAcL,MAAM,CAACE,OADhB;AAFP,OAAN;;AAMF;AACA,aAAOH,KAAP;AAjCA;AAmCH,CApCM","sourcesContent":["import {\r\n  ADD_DETAIL,\r\n  GET_DETAIL,\r\n  UPDATE_DETAIL,\r\n  DELETE_DETAIL\r\n} from \"../constant/types\";\r\n\r\n\r\n\r\nconst initialState = {\r\n  contacts:[\r\n    {\r\n    \"userId\": 1,\r\n    \"id\": 1,\r\n    \"title\": \"delectus aut autem\",\r\n    \"completed\": false\r\n  },\r\n  {\r\n    \"userId\": 1,\r\n    \"id\": 2,\r\n    \"title\": \"quis ut nam facilis et officia qui\",\r\n    \"completed\": false\r\n  },\r\n  {\r\n    \"userId\": 1,\r\n    \"id\": 3,\r\n    \"title\": \"fugiat veniam minus\",\r\n    \"completed\": false\r\n  },\r\n  {\r\n    \"userId\": 1,\r\n    \"id\": 4,\r\n    \"title\": \"et porro tempora\",\r\n    \"completed\": true\r\n  },\r\n  {\r\n    \"userId\": 1,\r\n    \"id\": 5,\r\n    \"title\": \"laboriosam mollitia et enim quasi adipisci quia provident illum\",\r\n    \"completed\": false\r\n  }\r\n  ],\r\n  contact: null,\r\n};\r\n\r\nexport const detailReducer = (state = initialState, action)=> {\r\n    switch(action.type) {\r\n    case ADD_DETAIL:\r\n        return{\r\n            contacts: [action.payload, ...state.contacts]\r\n        };\r\n        \r\n    case GET_DETAIL:\r\n      let arr = state.contacts.filter((contact) => contact.id == action.payload);\r\n        arr = arr.values(); \r\n        for(let val of arr){\r\n          arr = val;\r\n        }\r\n        return{\r\n            ...state,\r\n            contact: arr,\r\n        };\r\n\r\n    case UPDATE_DETAIL:\r\n      return{\r\n        ...state,\r\n        contact:state.contacts.map((contact) => \r\n            contact.id == action.payload.id ? action.payload : contact\r\n        )\r\n      };\r\n\r\n    case DELETE_DETAIL:\r\n      return{\r\n          ...state,\r\n          contacts:state.contacts.filter((contact) => \r\n              contact.id != action.payload\r\n          ),\r\n      };\r\n    default:\r\n    return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}